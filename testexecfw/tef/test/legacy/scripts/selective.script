//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description: 
//

PRINT Legendary RUN_TEST_STEP steps for confirming backward compatibility
//
PRINT Run all Sample Tests 
//
LOAD_SUITE SampleServer
//
#
PREFIX RUN_UTILS
MkDir c:\SampleTest\
CopyFile c:\plattest\SampleTest1.script c:\SampleTest\SampleTest1.Script
CopyFile c:\plattest\SampleTest.ini c:\SampleTest\SampleTest.ini
MakeReadWrite c:\SampleTest\SampleTest1.Script
MakeReadWrite c:\SampleTest\SampleTest.ini
REMOVE_PREFIX

START_TESTCASE Huhana
START_REPEAT c:\sampletest\sampletest.ini SectionOne repeatParam
RUN_TEST_STEP 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionOne
RUN_TEST_STEP 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionOne
END_REPEAT
END_TESTCASE Huhana

START_TESTCASE Tama
START_REPEAT c:\sampletest\sampletest.ini SectionOne repeatParam
RUN_TEST_STEP 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionOne
RUN_TEST_STEP 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionOne
END_REPEAT
END_TESTCASE Tama


START_TESTCASE Ngaio
RUN_TEST_STEP 100 SampleServer SampleStep3  
END_TESTCASE Ngaio

START_TESTCASE Patariki
RUN_TEST_STEP 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionOne
END_TESTCASE Patariki 

//CONCURRENT
//START_TESTCASE Piripi
//RUN_TEST_STEP 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionOne
//DELAY 5000
//START_REPEAT c:\sampletest\sampletest.ini SectionOne repeatParam
//RUN_SCRIPT c:\sampletest\sampletest1.script
//RUN_PROGRAM Eshell.exe
//END_REPEAT
//RUN_PANIC_STEP_RESULT 1 SampleServer 100 SampleServer SampleStep1  c:\sampletest\SampleTest.ini SectionTwo
//RUN_PROGRAM EPanic.exe
//END_TESTCASE Piripi


CONCURRENT
START_TESTCASE Tane 
RUN_TEST_STEP 100 SampleServer SampleStep5
END_TESTCASE Tane

START_TESTCASE Maata 
RUN_TEST_STEP 100 SampleServer SampleStep6
RUN_TEST_STEP 100 SampleServer SampleStep7
END_TESTCASE Maata 



//START_REPEAT c:\sampletest\sampletest.ini SectionOne repeatParam
CONSECUTIVE
PREFIX RUN_PANIC_STEP 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
REMOVE_PREFIX

PRINT RUN_TEST_STEP with !TEF Parameters

PRINT Test that !Error works as expected when the test step result sets the correct error return value
RUN_TEST_STEP !Error=-43 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne

PRINT Test that !Error works correctly when the test step result sets the incorrect error return value
RUN_TEST_STEP !Error=43 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne

PRINT Test that !Error and !Result in combination causes a TEF error in the log file
RUN_TEST_STEP !Error=-43 !Result=Fail 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne

START_TESTCASE Timoti 
PRINT Test that !Error works correctly when the test step does not return an error
RUN_TEST_STEP !Error=-43 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
END_TESTCASE Timoti

PRINT Test that !Panic works correctly when the test step panics with a matching panic string
RUN_TEST_STEP !PanicString=SampleServer 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
RUN_TEST_STEP !PanicString="SampleServer" 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
RUN_TEST_STEP !PanicCode=1 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo

PRINT Test that !Panic works correctly when the test step panics with a non-matching panic string
RUN_TEST_STEP !PanicString=Sample 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
RUN_TEST_STEP !PanicString="Sample" 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
RUN_TEST_STEP !PanicCode=2 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo

START_TESTCASE Moana
RUN_TEST_STEP 100 SampleServer SampleStep11  
END_TESTCASE Moana


PRINT Test that !Panic works correctly when the test step does not panic
RUN_TEST_STEP !PanicString=SampleServer 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne
RUN_TEST_STEP !PanicString="SampleServer" 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne
RUN_TEST_STEP !PanicCode=1 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne

PRINT Test that !Result works as RUN_TEST_STEP_RESULT
RUN_TEST_STEP !Result=Fail 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne
RUN_TEST_STEP !Result=Fail 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionOne


START_TESTCASE Proteus 
RUN_TEST_STEP 100 SampleServer SampleStep09  
END_TESTCASE Proteus 


PRINT Test that !Heap allocates the correct size heap value for the test step thread
RUN_TEST_STEP !Heap=0x10000 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne
RUN_TEST_STEP !Heap=0x10 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne
RUN_TEST_STEP !Heap=0x1000000 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne
RUN_TEST_STEP !Heap=0x0 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne

START_TESTCASE Paora 
RUN_TEST_STEP 100 SampleServer SampleStep10  
START_TESTCASE nested
RUN_TEST_STEP 100 SampleServer SampleStep10  
END_TESTCASE nested
END_TESTCASE Paora 

PRINT Test various combinations of TEF parameters being passed in
RUN_TEST_STEP !PanicCode=1 !PanicString=SampleServer 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
RUN_TEST_STEP !PanicString=Sample !PanicCode=1 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
RUN_TEST_STEP !PanicString=SampleServer !PanicCode=2 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
RUN_TEST_STEP !Error=-43 !PanicString=SampleServer 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne
RUN_TEST_STEP !Error=-43 !PanicCode=1 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne
RUN_TEST_STEP !Error=-43 !Heap=0x10000 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne

START_TESTCASE Mere
RUN_TEST_STEP !PanicString=SampleServer !Heap=0x10000 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
RUN_TEST_STEP !PanicString=SampleServer !PanicCode=1 !Heap=0x10000 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
RUN_TEST_STEP !PanicString=SampleServer !Result=Fail 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
RUN_TEST_STEP !PanicCode=1 !Result=Fail 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
RUN_TEST_STEP !PanicString=SampleServer !PanicCode=1 !Result=Fail 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
END_TESTCASE Mere

PRINT Test a range of edge conditions where multiple TEF parameter entries
RUN_TEST_STEP !PanicString=SampleServer !Heap=0x10000 !PanicString=SampleServ 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
RUN_TEST_STEP !Result=Fail !Result=Fail 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionOne
RUN_TEST_STEP !Error=43 !Error=-43 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne
RUN_TEST_STEP !PanicCode=1 !PanicCode=2 100 SampleServer SampleStep1  c:\sampletest\sampleTest.ini SectionTwo
RUN_TEST_STEP !Heap=0x10000 !Heap=0x1000 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne

PRINT Test with shared data test steps
LOAD_SUITE SampleServer -SharedData
RUN_TEST_STEP !Error=-43 100 SampleServer SampleStep2  c:\sampletest\sampleTest.ini SectionOne
RUN_TEST_STEP !Error=-43 100 SampleServer SampleStep3  c:\sampletest\sampleTest.ini SectionOne



START_TESTCASE Roimata 
RUN_TEST_STEP 100 SampleServer SampleStep13  
END_TESTCASE Roimata


